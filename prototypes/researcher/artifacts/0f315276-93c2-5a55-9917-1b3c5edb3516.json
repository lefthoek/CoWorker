{"title":"Mercury Web Parser by Postlight","author":null,"date_published":null,"dek":null,"lead_image_url":"https://mercury.postlight.com/_/src/components/images/large-summary-twitter.25a9c55f1e5441c6d04cf0020832b114.png","content":"<div><div class=\"pb4\"><p class=\"_1bdx5\">Command</p><pre class=\" _2PeXZ br2 pre pa4 mt0 undefined \"><span><span>yarn add @postlight/mercury-parser\n# or\nnpm install @postlight/mercury-parser\n</span></span></pre></div><div class=\"pb4\"><p class=\"calm-orange\">Usage</p><p class=\"_1xkDn\"> To use Mercury Parser, just import the package and then run Mercury.parse. </p></div><div class=\"pb4\"><p class=\"_1bdx5\">Code Sample</p><pre class=\" _2PeXZ br2 pre pa4 mt0 undefined \"><span><span>import Mercury from &quot;@postlight/mercury-parser&quot;; const url=&quot;https://trackchanges.postlight.com/building-awesome-cms-f034344d8ed&quot;;\nMercury.parse(url).then(result =&gt; console.log(result));\n</span></span></pre></div><div class=\"pb4\"><p class=\"_1xkDn\"> The result looks like this: </p></div><div class=\"pb4\"><p class=\"_1bdx5\">Response</p><pre class=\" _2PeXZ br2 pre pa4 mt0 undefined \"><span><span>{ author: &quot;Jeremy Mack&quot;, content: &quot;&lt;div class=&quot;body__content&quot;&gt; &lt;p&gt;&lt;a href=&quot;https://github.com/postlight/awesome-cms&quot;&gt;Awesome CMS&lt;/a&gt; is&#x2026;an awesome list of awesome content management systems, grouped by language and ordered by popularity. It&#x2019;s on GitHub, so anyone can add to it via a pull request.&lt;/p&gt;&#x21B5;&lt;p&gt;Check it out:&lt;/p&gt;&#x21B5;&lt;blockquote class=&quot;embedly-card&quot;&gt; &lt;p&gt;&#x1F4DA; A collection of open and closed source Content Management Systems (CMS) for your perusal. &#x2013; postlight/awesome-cms&lt;/p&gt;&#x21B5;&lt;/blockquote&gt; &lt;p&gt;Here are some notes on how and why Awesome CMS came to be.&lt;/p&gt;&#x21B5;&lt;h3&gt;Compilation&lt;/h3&gt;&#x21B5;&lt;p&gt;GitHub has a &lt;a href=&quot;https://help.github.com/articles/search-syntax/&quot;&gt;set of powerful commands&lt;/a&gt; for narrowing search results. In seeking out modern content management tools, I used queries like this:&lt;/p&gt;&#x21B5;&lt;p&gt;&lt;a href=&quot;https://github.com/search?o=desc&amp;amp;q=cms+OR+%22content+management%22+OR+admin+pushed%3A%3E2016-01-01+stars%3A%3E50&amp;amp;ref=searchresults&amp;amp;s=stars&amp;amp;type=Repositories&amp;amp;utf8=%E2%9C%93&quot;&gt;cms OR &#x201C;content management&#x201D; OR admin pushed:&amp;gt;2016&#x2013;01&#x2013;01 stars:&amp;gt;50&lt;/a&gt;&lt;/p&gt;&#x21B5;&lt;p&gt;Sorting by stars, I worked my way backwards. I was able to quickly spot relevant CMS projects. I also started to notice some trends.&lt;/p&gt;&#x21B5;&lt;ul&gt;&#x21B5;&lt;li&gt;Modern and popular content management systems are written in PHP, JavaScript, Python, and Ruby. There are also a few content management systems written in&amp;nbsp;.NET (C#), but they are much less popular on GitHub.&lt;/li&gt;&#x21B5;&lt;li&gt;Headless content management systems are gaining popularity. Simply presenting the UI for users to edit content, and relying on the end user to create the user-facing site by ingesting the API. &lt;a href=&quot;http://getdirectus.com/&quot;&gt;Directus&lt;/a&gt; and &lt;a href=&quot;https://www.cloudcms.com/&quot;&gt;Cloud CMS&lt;/a&gt; are headless CMS options.&lt;/li&gt;&#x21B5;&lt;li&gt;Static content management systems don&#x2019;t host pages for you. Instead they help generate your CMS, using static files. &lt;a href=&quot;https://github.com/netlify/netlify-cms&quot;&gt;Netlify CMS&lt;/a&gt;, &lt;a href=&quot;https://respondcms.com/&quot;&gt;Respond CMS&lt;/a&gt;, and &lt;a href=&quot;https://www.getlektor.com/&quot;&gt;Lektor&lt;/a&gt; are a few of the options in the static CMS space.&lt;/li&gt;&#x21B5;&lt;/ul&gt;&#x21B5;&lt;h3&gt;Tooling&lt;/h3&gt;&#x21B5;&lt;p&gt;I knew the list of all popular content management systems would be huge. I didn&#x2019;t want to put that data into Markdown directly, as it would be difficult to maintain and to augment with extra data (stars on GitHub, last push date, tags, etc).&lt;/p&gt;&#x21B5;&lt;p&gt;Instead, I opted to store the data in &lt;a href=&quot;https://github.com/toml-lang/toml&quot;&gt;TOML&lt;/a&gt;, a human-friendly configuration file language. You can view all of the data that powers Awesome CMS in the &lt;a href=&quot;https://github.com/postlight/awesome-cms/tree/97216ef432963d4dfb2238340e2ebf9a4127fb1e/data&quot;&gt;data folder&lt;/a&gt;. Here&#x2019;s WordPress&#x2019; entry in that file:&lt;/p&gt;&#x21B5;&lt;pre&gt;[[cms]]&#x21B5;name = &quot;WordPress&quot;&#x21B5;description = &quot;WordPress is a free and open-source content management system (CMS) based on PHP and MySQL.&quot;&#x21B5;url = &quot;https://wordpress.org&quot;&#x21B5;github_repo = &quot;WordPress/WordPress&quot;&#x21B5;awesome_repo = &quot;miziomon/awesome-wordpress&quot;&#x21B5;language = &quot;php&quot;&lt;/pre&gt;&#x21B5;&lt;p&gt;I process this file using JavaScript in &lt;a href=&quot;https://github.com/postlight/awesome-cms/blob/97216ef432963d4dfb2238340e2ebf9a4127fb1e/scripts/generateReadme.js&quot;&gt;generateReadme.js&lt;/a&gt;. It handles processing the TOML, fetching information from GitHub, and generating the final README.md file using the &lt;a href=&quot;https://github.com/postlight/awesome-cms/blob/master/README.md.hbs&quot;&gt;Handlebars template&lt;/a&gt;. I&#x2019;m scraping GitHub for star counts because GitHub&#x2019;s API only allows for 60 requests an hour for authenticated users. We want to make it as easy as possible for anyone to contribute. Requiring users to generate a GitHub authentication token to generate the README wasn&#x2019;t an option.&lt;/p&gt;&#x21B5;&lt;div id=&quot;attachment_2200&quot; class=&quot;wp-caption alignnone&quot;&gt;&lt;img class=&quot;wp-image-2200 size-full&quot; src=&quot;https://13c27d41k2ud2vkddp226w55-wpengine.netdna-ssl.com/wp-content/uploads/2016/10/03-building-awesome-cms-1.gif&quot; width=&quot;360&quot;&gt;&lt;p class=&quot;wp-caption-text&quot;&gt;I heard you like content management systems&lt;/p&gt;&lt;/div&gt;&#x21B5;&lt;p&gt;By storing the data in TOML at generating the README.md using JavaScript, I&#x2019;ve essentially created an incredibly light-weight, GitHub-backed, static CMS &#x2013; to power Awesome CMS.&lt;/p&gt;&#x21B5;&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://postlight.com/trackchanges/author/jeremy-mack&quot;&gt;Jeremy Mack&lt;/a&gt; is a Director of Engineering at Postlight. Need a better CMS? Get in touch: &lt;a href=&quot;https://trackchanges.postlight.com/cdn-cgi/l/email-protection#7b131e1717143b0b14080f17121c130f55181416&quot;&gt;&lt;span class=&quot;__cf_email__&quot;&gt;[email&amp;nbsp;protected]&lt;/span&gt;&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &lt;/div&gt;&quot;, date_published: &quot;2016-10-03T16:48:58.000Z&quot;, dek: null, direction: &quot;ltr&quot;, domain: &quot;trackchanges.postlight.com&quot;, excerpt: &quot;Awesome CMS is&#x2026;an awesome list of awesome content management systems, grouped by language and ordered by popularity. It&#x2019;s on GitHub, so anyone can add to ...&quot;, lead_image_url: &quot;https://postlight.com/wp-content/uploads/2016/10/03-building-awesome-cms-0.png&quot;, next_page_url: null, rendered_pages: 1, title: &quot;Building Awesome CMS &#x2014; Postlight &#x2014; Digital product studio&quot;, total_pages: 1, url: &quot;https://trackchanges.postlight.com/building-awesome-cms-f034344d8ed&quot;, word_count: 465,\n}</span></span></pre></div></div>","next_page_url":null,"url":"https://mercury.postlight.com/web-parser/","domain":"mercury.postlight.com","excerpt":"Make semantic sense out of any web article. Mercury Web Parser turns web articles into structured content reliably and easily.","word_count":567,"direction":"ltr","total_pages":1,"rendered_pages":1}