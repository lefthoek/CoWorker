service: lefthoek-prototype-upstream
frameworkVersion: "2"
variablesResolutionMode: "20210326"
configValidationMode: error
useDotenv: true
plugins:
  - serverless-plugin-monorepo
custom:
  parameter_prefix: lefthoek-prototypes
  datalake_bucket: ${ssm:/${self:custom.parameter_prefix}/buckets/datalake}
  event_bus: ${ssm:/${self:custom.parameter_prefix}/event_bus}
  function_prefix: lefthoek-prototype-upstream-${opt:stage}
  oauth: ${self:custom.function_prefix}-oauth
  mine: ${self:custom.function_prefix}-mine
  function_role: ${ssm:/${self:custom.parameter_prefix}/roles/function}

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  eventBridge:
    useCloudFormation: true
  iam:
    role: ${self:custom.function_role}
  region: eu-west-1

functions:
  oauth:
    handler: dist/index.slack
    events:
      - httpApi:
          path: /integrations/slack
          method: get
    environment:
      SLACK_CLIENT_ID: ${env:SLACK_CLIENT_ID}
      SLACK_CLIENT_SECRET: ${env:SLACK_CLIENT_SECRET}
      EVENT_BUS_NAME: ${self:custom.event_bus}
      HANDLER_NAME: ${self:custom.oauth}
  mine:
    handler: dist/index.mine
    events:
      - eventBridge:
          eventBus: ${self:custom.event_bus}
          pattern:
            source:
              - ${self:custom.oauth}
            detail-type:
              - SLACK_TEAM_ADDED
    environment:
      DATALAKE_BUCKET: ${self:custom.datalake_bucket}
      HANDLER_NAME: ${self:custom.mine}
      EVENT_BUS_NAME: ${self:custom.event_bus}
